"0","#Here are some 3d plots from Birgits code - since r is a function of m it has no affect in the plots. But they still cool just take a soek to run"
"0","# negbinom_loglik_plotting <- function(par){"
"0","#   m <- par[1]"
"0","#   r <- par[2]"
"0","# "
"0","#   loglik <- -n*log(gamma(r)) + sum(log(gamma(r+x))) - sum(log(factorial(x))) + sum(x) * log(m/(m+r)) + n*r*log(r/(r+m))"
"0","# "
"0","#   return(loglik)"
"0","# "
"0","# }"
"0","# "
"0","# #m range for plotting"
"0","# m_range_ll <- seq(1,20, length.out = 100)"
"0","# #r range for plotting"
"0","# r_range_ll <- seq(0.01,1,length.out = 100)"
"0","# "
"0","# #every combination - kinda like a kronecker product"
"0","# pp <- expand.grid(x = m_range_ll, y = r_range_ll)"
"0","# "
"0","# #loglike z range for plotting"
"0","# z_range_ll <- numeric(length(pp$x))"
"0","# "
"0","# for(i in 1:length(pp$x)){"
"0","#    z_range_ll[i] <- negbinom_loglik_plotting(pp[i,])"
"0","#  }"
"0","# "
"0","# z_range_ll <- unlist(z_range_ll)"
"0","# "
"0","# Z <- matrix(z_range_ll,nrow=100)"
"0","# "
"0","# #Saves plot"
"0","# jpeg('contourplot.jpg')"
"0","#   contour(m_range_ll, r_range_ll, Z, add = F, nlevels = 30,"
"0","#        xlab=""m values"", ylab=""r values"", zlab=""Likelihood"")"
"0","# dev.off()"
"0","# "
"0","# jpeg('perspplot.jpg')"
"0","#   persp(m_range_ll,r_range_ll, Z, theta=-50, phi=15,"
"0","#          col=""lightblue"",expand = 0.5,shade = 0.2,"
"0","#          xlab=""m values"", ylab=""r values"", zlab=""Likelihood"")"
"0","# dev.off()"
"0","#read file"
"0","img <- readJPEG(""contourplot.jpg"",native = TRUE)"
"0","if(exists(""rasterImage"")){"
"0","      cont <- plot(1:2, type='n',axes = F,xlab = """",ylab = """",main = ""Negative Binomial likelihood surface"")"
"0","      rasterImage(img,1,1,2,2)"
"0","}"
