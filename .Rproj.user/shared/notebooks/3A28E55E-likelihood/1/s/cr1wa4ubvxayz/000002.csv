"0","#have to redfine function to allow for correct optimisation"
"0","calc_negbinom_loglik_profile <- function(m,r){"
"0","  "
"0","  loglik <- -n*log(gamma(r)) + sum(log(gamma(r+x))) - sum(log(factorial(x))) + sum(x) * log(m/(m+r)) + n*r*log(r/(r+m))"
"0","  "
"0","  return(loglik)"
"0","  "
"0","}"
"0","profile_likelihood_calc_shape <- function(){"
"0","  "
"0","  #Calculate profile for R by calculating mle for M at eacg value of R"
"0","  "
"0","  estimated_m_s <- numeric(length(r_range))"
"0","  "
"0","          for(i in seq_along(r_range)){"
"0","            "
"0","              mle_profile <- #find mle for r at each value of m"
"0","                          optim("
"0","                          par = 1,"
"0","                          r = r_range[i],"
"0","                          fn = calc_negbinom_loglik_profile ,"
"0","                          control = list(fnscale = -1),"
"0","                          lower = 1,"
"0","                          upper = 100 ,  "
"0","                          method = ""L-BFGS-B"""
"0","          )"
"0","          estimated_m_s[i] <- mle_profile$par"
"0","            "
"0","        }"
"0","          "
"0","  return(estimated_m_s)"
"0","}"
"0","estimated_m_values <- profile_likelihood_calc_shape() #all m values are the same, this make sense as m is the dude who will afect loglikelihood "
"0","r_profile_loglik_values <- numeric(length(r_range))"
"0","r_profile_ratio <- numeric(length(r_range))"
"0","for (i in seq_along(estimated_m_values)){"
"0","  "
"0","  r_profile_loglik_values[i] <- calc_negbinom_loglik_profile(m = estimated_m_values[i], r = r_range[i])"
"0","  "
"0","  #Going to try make relative likelihood ratio"
"0","  r_profile_ratio[i] <- exp(r_profile_loglik_values[i] - calc_negbinom_loglik_profile(m = estimated_m_values[i], r = r_estimate))"
"0","  "
"0","  "
"0","}"
"0","data_frame(x = r_range, val = r_profile_loglik_values) %>% "
"0","    ggplot(aes(x=x,y=val))+"
"0","    geom_point(size = 1) +"
"0","   scale_x_continuous(breaks = seq(0,0.8,by=0.05)) +"
"0","    geom_vline(xintercept = 0.58, col = ""red"", lty = ""dashed"") +"
"0","    labs(x = ""R shape parameter value"", y = ""Profile Loglikelihood"" , title = ""Profile Loglikelihood of R Shape Parameter"") +"
"0","    theme_classic()"
