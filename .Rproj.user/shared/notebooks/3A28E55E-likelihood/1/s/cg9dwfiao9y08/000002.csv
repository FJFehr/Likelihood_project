"0","#select all bounds which meet a cutoff,"
"0","#done for m only"
"0","#plug in mle values to get l(theta_hat)"
"0","max_m_loglikelihood <- calc_negbinom_loglik_profile(m = m_estimate , r = r_estimate)"
"0","fnct <- function(m, max_m_loglikelihood, cutoff = qchisq(.95,1)) {"
"0","  # out <- #using function that i used to calculate joint MLE for m and R the only downside to this is that it is NOT taking in different shape parameters...check out the function"
"0","  # optim("
"0","  # par = m,"
"0","  # fn = calc_negbinom_loglik ,"
"0","  # control = list(fnscale = -1),"
"0","  # lower = 3,"
"0","  # upper = 30 ,"
"0","  # method = ""L-BFGS-B"""
"0","  # )"
"0","  "
"0","  "
"0","  r <- m^2 /(var(x) - m )"
"0","  "
"0","  "
"0","  "
"0","  "
"0","  f <- 2 * (max_m_loglikelihood - calc_negbinom_loglik_profile(m = m ,r = r)) - cutoff #this value should be zero for the constraints to be satisfied"
"0","  #replcae qchisq() with a random gamma cutoff if necesary"
"0","  "
"0","}"
"0","lower_bound_wilk_interval <- uniroot(fnct, c(1, m_estimate) , max_m_loglikelihood = max_m_loglikelihood)"
"0","upper_bound_wilk_interval <- uniroot(fnct, c(m_estimate, 52) , max_m_loglikelihood = max_m_loglikelihood)"
"0","wilks_likelihood <- c(lower_bound_wilk_interval$root,upper_bound_wilk_interval$root)"
"0","data_frame('Lower bound'= wilks_likelihood[1] , 'Upper bound' = wilks_likelihood[2]) %>% knitr::kable(caption = ""Wilks Likelihood interval for m parameter"")"
"1","

"
"1","| Lower bound| Upper bound|"
"1","
"
"1","|-----------:|-----------:|"
"1","
"
"1","|    6.586151|    7.038553|"
"1","
"
